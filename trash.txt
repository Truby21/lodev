	i = -1;
	mlx = mlx_init();
	win = mlx_new_window(mlx, 1080, 720, "2D");
	while (param->map[++i] != NULL)
	{
		y = y + 30;
		x = 0;
		while (param->map[i][++j] != '\0')
		{
			x = x + 30;
			if (param->map[i][j] == '1')
				ft_put_square(mlx, win, x, y);
			else if (param->map[i][j] == '0')
				ft_put_square1(mlx, win, x, y);
			else if (param->map[i][j] == 'N')
				ft_put_square_player(mlx, win, x, y);
			else
				continue ;
		}
		j = -1;
	}
	mlx_loop(mlx);
}

//	printf("%s", mapline);
//	printf("%s\n", param->NO);
//	printf("%s\n", param->SO);
//	printf("%s\n", param->WE);
//	printf("%s\n", param->EA);
//	printf("%s\n", param->S);
//	printf("%i\n", param->Rx);
//	printf("%i\n", param->Ry);
//	printf("%x\n", param->f_color);
//	printf("%x\n", param->c_color);
//	i = 0;
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i++]);
//	printf("%s\n", param->map[i]);

printf("x = %i\n", (int)data->param.plx);
		printf("y = %i\n", (int)data->param.ply);